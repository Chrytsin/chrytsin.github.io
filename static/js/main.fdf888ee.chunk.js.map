{"version":3,"sources":["textbox.jsx","stack.js","infixToPostfix.jsx","App.jsx","animationTrail.jsx","Column.jsx","Visualization.jsx","index.js","functions.jsx"],"names":["Textbox","props","className","onSubmit","label","type","onChange","value","Stack","items","this","split","Array","isArray","Error","elem","push","length","pop","index","infixToPostfix","exp","console","log","result","stack","i","c","charAt","isLetter","isNumber","isEmpty","peek","operPriority","App","handleSubmit","e","target","state","setState","postfix","inf","from","tog","eval","preventDefault","render","handleChange","onClick","clearAll","handleAutosubmit","toggle","onFinished","React","Component","AnimationTrail","trail","useTrail","config","mass","tension","friction","opacity","y","height","map","rest","div","style","transform","interpolate","List","v","Item","Column","infix","carry","spec","message","Visualization","play","cancellationHandler","setTimeout","speed","playerCancellationHandler","isPlaying","pause","clearTimeout","togglePausePlay","stop","processState","car","post","clear","msg","isOpeningParenthesis","isClosingParenthesis","isOperator","shift","item","ReactDOM","StrictMode","document","getElementById","test","includes"],"mappings":"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","file":"static/js/main.fdf888ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Textbox(props) {\r\n\r\n    return(\r\n        <div className=\"four wide column\">\r\n            <div className=\"search-bar ui segment\">\r\n                <form onSubmit = {props.onSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>{props.label}</label>\r\n                        <input \r\n                            type = \"text\"\r\n                            onChange = {props.onChange}\r\n                            value = {props.value}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Textbox;","export class Stack {\r\n    items = [];\r\n\r\n    constructor(items = []) {\r\n        if (typeof items === \"string\") {\r\n            this.items = items.split('');\r\n        } else if (Array.isArray(items))\r\n            this.items = items;\r\n        else\r\n            throw new Error(\"Error unrecognized type\");\r\n    }\r\n\r\n    push(elem) {\r\n        this.items.push(elem);\r\n    }\r\n\r\n    pop() {\r\n        if (this.items.length === 0)\r\n            return \"Underflow\";\r\n        return this.items.pop();\r\n    }\r\n\r\n    peek(index = null) {\r\n        if (index === null)\r\n            return this.items[this.items.length - 1];\r\n        return this.items[index];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.items.length === 0;\r\n    }\r\n\r\n    get(index) {\r\n        return this.items[index];\r\n    }\r\n\r\n    length() {\r\n        return this.items.length\r\n    }\r\n\r\n    clone() {\r\n        return new Stack([...this.items]);\r\n    }\r\n}\r\n\r\n","import {Stack} from \"./stack\";\r\nimport {isLetter, isNumber, operPriority} from  './functions';\r\n\r\n// Μετατρέπει το infix σε postfix\r\nfunction infixToPostfix(exp) {\r\n\r\n    if (exp.length === 0) {        \r\n        console.log(\"INF=0\");\r\n        return '';\r\n    }\r\n\r\n    else {\r\n        let result = \"\";\r\n        let stack = new Stack();\r\n\r\n        for (let i = 0; i < exp.length; i++) {\r\n            let c = exp.charAt(i);\r\n\r\n            // if letter or digit -> result\r\n            if (isLetter(c) || isNumber(c)) { \r\n                result += c;\r\n            \r\n            // if ( -> stack\r\n            } else if (c === '(') {\r\n                stack.push(c);\r\n\r\n            } else {\r\n                // if ) + while: stack>0 & stack.peek.not( -> pop & result\r\n                if (c === ')') {\r\n                    while (!stack.isEmpty() && stack.peek() !== '(') {\r\n                        result += stack.pop();\r\n                    }\r\n                    \r\n                    // if ) + if: stack>0 & stack.peek.not( -> Invalid\r\n                    if (!stack.isEmpty() && stack.peek() !== '(') {\r\n                        return \"Invalid Expression\";\r\n\r\n                    // if ) + if: stack=0 & stack.top.is( -> pop\r\n                    } else {\r\n                        stack.pop();\r\n                    }\r\n                \r\n                // if not: letter/digit OR ) OR ( + while: stack>0 & c<=stack.top -> pop & result\r\n                } else {\r\n                    while (!stack.isEmpty() && operPriority(c) <= operPriority(stack.peek())) {\r\n                        result += stack.pop();\r\n                    }\r\n                \r\n                // if not: letter/digit OR ) OR ( + stack=0 OR c>stack.top -> stack\r\n                    stack.push(c);\r\n                }\r\n            }\r\n        }\r\n\r\n        // infix completed + while: stack>0 -> pop & result\r\n        while (!stack.isEmpty()) {\r\n            result += stack.pop();\r\n        }\r\n\r\n        console.log('INFIX CALCULATED. POSTFIX= ', result);\r\n        return result;\r\n    }  \r\n}\r\n\r\nexport default infixToPostfix;","import styles from './styles.css';\nimport React from 'react';\nimport Textbox from './textbox';\nimport infixToPostfix from './infixToPostfix';\nimport {isLetter} from './functions';\nimport Visualization from './Visualization';\n \nclass App extends React.Component {\n \n  constructor (props) {\n    super(props);\n    //this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      exp: '',\n      inf: [],\n      postfix: '',\n      result: '',\n      tog: false\n    };\n    console.log('APP CONSTRUCTOR', this.props);\n  }\n \n \n  handleChange(e) {\n    console.log('HANDLECHANGE', e.target.value);     \n    this.setState({exp: e.target.value});\n    e.preventDefault();\n  }\n \n  handleSubmit = (e) => {\n    console.log('HANDLESUBMIT', e.target.value);\n    if(!isLetter(this.state.exp)) {\n      this.setState({\n        postfix: infixToPostfix(this.state.exp),\n        result: eval(this.state.exp),\n        inf: Array.from(this.state.exp),\n        tog: true\n      });\n    } else {\n      this.setState({\n        postfix: infixToPostfix(this.state.exp),\n        result: \"Characters can not be calculated.\",\n        inf: Array.from(this.state.exp),\n        tog: true\n      });      \n    }\n    e.preventDefault();\n    this.render();\n  }\n \n  handleAutosubmit(e) {\n    console.log('HANDLEAUTOSUBMIT', e.target.value);\n    e.preventDefault();\n  }\n \n  clearAll() {\n    console.log('CLEARALL');\n    this.setState({\n      exp: '',\n      postfix: '',\n      result: '',\n      inf: [],\n      tog: false\n    });\n  }\n\n  render() {\n    console.log('APP RENDER');\n    return(\n      <div className=\"ui container\">\n        <div className=\"ui grid\">\n          <Textbox\n            value = {(this.state.exp)}\n            label = {\"Infix\"}\n            onChange = {e => this.handleChange(e)}\n            onSubmit = {e => this.handleSubmit(e)}\n          />\n          <div className=\"four wide column buttons\">\n            <button\n              className = \"ui positive button\"\n              onClick = {e => this.handleSubmit(e)}\n            >\n              Convert\n            </button>\n            <button\n              className = \"ui negative button\"\n              onClick = {e => this.clearAll(e)}\n            >\n              Clear\n            </button>\n          </div>\n          <Textbox\n            value = {this.state.postfix}\n            label = {\"Postfix\"}\n            onChange = {e => this.handleAutosubmit(e)}\n            onSubmit = {e => this.handleAutosubmit(e)}\n          />\n          <Textbox\n            value = {(this.state.result)}\n            label = {\"Result\"}\n            onChange = {e => this.handleAutosubmit(e)}\n            onSubmit = {e => this.handleAutosubmit(e)}\n          />\n        </div>\n        <Visualization\n          exp = {this.state.inf} \n          toggle = {this.state.tog}\n          onFinished = {() => {this.setState({tog:false})}} \n        />\n      </div>\n    );\n  }\n \n \n}\n \nexport default App;","import React from 'react';\r\nimport { useTrail, animated } from 'react-spring';\r\nimport { List } from \"semantic-ui-react\"\r\nimport animationTrail from './animationTrail.css';\r\n\r\nfunction AnimationTrail(props) {\r\n  const config = { mass: 5, tension: 2000, friction: 200 }\r\n  let items = props.items;\r\n  let toggle = props.tog;\r\n\r\n  const trail = useTrail(\r\n    () => items.length, {\r\n      config,\r\n      opacity: toggle ? 1 : 0,\r\n      y: toggle ? 0 : 20,\r\n      height: toggle ? 160 : 0,\r\n      from: { opacity: 0, y: 20, height: 0 },\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div className=\"trails-main\">\r\n      <div>\r\n          {trail.map(({ y, height, ...rest }, index) => (\r\n          <animated.div\r\n            key={items[index]}\r\n            className=\"trails-text\"\r\n            style={{ ...rest, transform: y.interpolate(y => `translate3d(0,${y}px,0)`) }}>\r\n            <List style={{ height }}>{items.map((v)=><List.Item>{v}</List.Item>)}</List>\r\n          </animated.div>\r\n        ))} \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default AnimationTrail;","import React from 'react';\r\nimport AnimationTrail from './animationTrail';\r\n\r\nfunction Column(props) {\r\n    console.log(props);\r\n    return(\r\n        <div className = \"animations ui grid\" >        \r\n            <div className=\"col-anim four wide column\">\r\n                <h3>Infix</h3>\r\n                <AnimationTrail items = {props.infix} tog = {props.toggle} />\r\n            </div>\r\n            <div className=\"col-anim four wide column\">\r\n                <h3>Carry</h3>\r\n                <AnimationTrail items = {props.carry} tog = {props.toggle} />\r\n            </div>\r\n            <div className=\"col-anim four wide column\">\r\n                <h3>Postfix</h3>\r\n                <AnimationTrail items = {props.postfix} tog = {props.toggle} />\r\n            </div>\r\n            <div className=\"col-anim four wide column\">\r\n                <h3>{props.spec}</h3>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Column;","import React from 'react';\r\nimport {isLetter, isNumber, isOperator, isClosingParenthesis, isOpeningParenthesis, operPriority } from './functions';\r\nimport Column from './Column';\r\nimport {Button, Container, Divider, Grid, Header, Input, Message, Segment} from 'semantic-ui-react';\r\n\r\n//infix: (a+b/c*(d+e)-f)\r\n//postfix: abc/de+*+f-\r\n \r\nclass Visualization extends React.Component {\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            inf: this.props.exp,\r\n            car: [],\r\n            post: [],\r\n            msg: '',\r\n            tog: this.props.toggle,\r\n            isPlaying: false,\r\n            playerCancellationHandler: null\r\n        }\r\n        console.log('VISUALIZATIONNEW CONSTRUCTOR', this.props, this.state);\r\n    }\r\n\r\n    play = () => {        \r\n            let cancellationHandler = setTimeout(() => {\r\n                this.play();\r\n            }, this.state.speed);\r\n            this.setState({\r\n                playerCancellationHandler:cancellationHandler,\r\n                isPlaying: true\r\n            });\r\n    }\r\n\r\n    pause = () => {\r\n        clearTimeout(this.state.playerCancellationHandler);\r\n        this.setState({playerCancellationHandler: null, isPlaying: false});\r\n    }\r\n\r\n    togglePausePlay = () => {\r\n        if (this.state.isPlaying) {\r\n            this.pause();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    stop = () => {\r\n        if (this.state.playerCancellationHandler) {\r\n            clearTimeout(this.state.playerCancellationHandler);\r\n        }\r\n        this.setState({isPlaying: false, playerCancellationHandler: null});\r\n    }\r\n\r\n    clear() {\r\n        this.props.onFinished();\r\n        this.setState({\r\n            inf: [],\r\n            car: [],\r\n            post: [],\r\n            msg: '',\r\n            tog: false\r\n        });\r\n    }\r\n \r\n    render() {        \r\n        console.log('RENDER on', this.props, this.state);\r\n            const items =this.state.inf.map((item) => <li>{item}</li>);\r\n            return (\r\n                <div className=\"ui container\">\r\n                    <Column\r\n                        spec='Specifications: '\r\n                        infix={items}\r\n                        carry={this.state.car}\r\n                        postfix={this.state.post}\r\n                        message={this.state.msg}\r\n                        toggle={this.state.tog}\r\n                    />\r\n                </div>\r\n            );\r\n    }\r\n    /** Play-Pause and Stop-Reset buttons \r\n    <div className=\"ui grid\">\r\n        <div className=\"two wide column buttons\">   \r\n            <Button icon={this.state.isPlaying ? \"pause\" : \"play\"}\r\n                content={this.state.isPlaying ? \"Pause\" : \"Play\"}\r\n                color={\"blue\"}\r\n                onClick={() => this.togglePausePlay()}\r\n            />               \r\n            <Button icon={this.state.isPlaying ? \"stop\" : \"undo\"}\r\n                content={this.state.isPlaying ? \"Stop\" : \"Reset\"}\r\n                color={this.state.isPlaying ? \"red\" : \"orange\"}\r\n                onClick={() => this.stop()}\r\n            />\r\n        </div>\r\n    </div>*/\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.toggle !== this.state.tog) {\r\n            console.log('COMPONENTDIDUPDATE', this.props, this.state);\r\n            this.setState({\r\n                inf: this.props.exp, \r\n                tog: this.props.toggle\r\n            });\r\n            setTimeout(this.processState, 1); \r\n        }\r\n    }\r\n \r\n    processState = () => { \r\n        console.log('PROCESSSTATE', this.props, this.state);\r\n\r\n        let c = this.state.inf[0],\r\n            infix = [...this.state.inf],\r\n            carry = [...this.state.car],\r\n            postfix = [...this.state.post];\r\n\r\n\r\n/********** An to TOGGLE=0 ******************************************************/ \r\n        if (!this.props.toggle) {        \r\n            console.log('INF=0 & CLEAR ALL');\r\n            this.clear();\r\n            infix=[];\r\n            carry=[];\r\n            postfix=[];        \r\n        }\r\n/********** TELOS an to TOGGLE=0 ******************************************************/ \r\n\r\n\r\n        //-----Gia kathe stoixeio tou infix\r\n        if (this.state.inf.length > 0) {\r\n            console.log('INF>0');\r\n            this.setState({isPlaying: true});\r\n\r\n/********** An to c einai gramma h arithmos *********************************************************/\r\n            if (isLetter(c) || isNumber(c)) {\r\n                console.log('C=LETTER/NUMBER');\r\n                this.setState({msg: 'The \"' + c + '\" is letter/number and goes to Postfix.' });\r\n\r\n                postfix.push(c);\r\n                setTimeout(2500);\r\n            }\r\n/********** TELOS An to c einai gramma h arithmos *********************************************************/\r\n\r\n\r\n/********** An to c einai anoixti parenthesi ( ******************************************************/\r\n            else if (isOpeningParenthesis(c)) {\r\n                console.log('C=(');\r\n                this.setState({msg: 'The character is opening parenthesis \"' + c + '\", so we push it directly to Carry.' });\r\n\r\n                carry.push(c);\r\n                setTimeout(2500);\r\n            }\r\n/********** TELOS An to c einai anoixti parenthesi ( ************************************************/\r\n\r\n\r\n/********** An to c einai kleisti parenthesi ) ******************************************************/\r\n            else if (isClosingParenthesis(c)) {\r\n                console.log(\"C=)\");\r\n\r\n                if (!carry.length>0) {\r\n                    console.log('INVALID: OPEN PARENTHESIS ( NOT FOUND AND CARRY=0');\r\n                    this.setState({msg: 'Invalid expression: Found a closing parenthesis, but not an opening one. Operation failed.' });  \r\n                    \r\n                    setTimeout(5000);\r\n                    this.setState({tog: false});\r\n                \r\n                } else {\r\n                    while (carry.length>0 && !isOpeningParenthesis(carry[carry.length-1])) {\r\n                        console.log('WHILE NOT (, CARRY POP -> POSTFIX');\r\n                        this.setState({msg: 'The closing parenthesis \"' + c + '\" pops first and all the other elements in Carry are pushed directly to Postfix, one by one.' });\r\n                        \r\n                        postfix.push(carry.pop());\r\n                        setTimeout(2500);\r\n\r\n                        this.setState({ car: carry });\r\n                        this.setState({ post: postfix });\r\n                        setTimeout(2500);\r\n                    }\r\n                    \r\n                    if (!carry.length>0 || !isOpeningParenthesis(carry[carry.length-1])){                            \r\n                        console.log('INVALID: OPENING PARENTHESIS ( NOT FOUND OR CARRY=0');\r\n                        this.setState({msg: 'Invalid expression: Found a closing parenthesis, but not an opening one. Operation failed.' });  \r\n                        \r\n                        setTimeout(5000);\r\n                        this.setState({tog: false});\r\n\r\n                    } else {\r\n                        console.log('CARRY PEEK = (');\r\n                        this.setState({msg: 'Carry pops the opening parenthesis \"' + c + '\", since we do not need it anymore.' });  \r\n                        \r\n                        carry.pop();\r\n                        setTimeout(2500);\r\n                    }\r\n                }\r\n            }\r\n/********** TELOS An to c einai kleisti parenthesi ) ************************************************/\r\n\r\n\r\n/********** An to c einai Operator +,-,/,*,^ ******************************************************/           \r\n            else if (isOperator(c)) {\r\n                console.log('C=OPERATOR');\r\n\r\n                while (carry.length>0 && operPriority(c) <= operPriority(carry[carry.length - 1])) {\r\n                    console.log('WHILE PRIORITY C <= CARRY & CARRY NOT EMPTY, CARRY POP -> POSTFIX');\r\n                    this.setState({msg: 'Compare the \"' + c + '\" with the \"' + carry[carry.length - 1] + '\" and the one with the higher priority goes to Postfix.' });\r\n\r\n                    postfix.push(carry.pop());\r\n                    setTimeout(2500);\r\n\r\n                    this.setState({ car: carry });\r\n                    this.setState({ post: postfix });\r\n                    setTimeout(2500);\r\n                }\r\n\r\n                if (!carry.length>0) {\r\n                    console.log('CARRY=0, SO C -> CARRY');\r\n                    this.setState({msg: 'The Carry is empty, so the \"' + c + '\" goes directly to Carry.' });\r\n                    \r\n                } else if (operPriority(c) <= operPriority(carry[carry.length - 1])) {\r\n                    console.log('PRIORITY C > CARRY, SO C -> CARRY');\r\n                    this.setState({msg: 'The \"' + c + '\" has higher priority than the \"' + carry[carry.length - 1] + '\" but still goes to Carry.' });\r\n                \r\n                } else if (isOpeningParenthesis(carry[carry.length-1])) {\r\n                    console.log('CARRY.PEEK = (, SO C GOES TO CARRY');\r\n                    this.setState({ msg: 'The last element of Carry is \"(\", so \"' + c + '\" also goes to Carry.' });\r\n                }\r\n\r\n                carry.push(c);\r\n                setTimeout(2500);\r\n            }\r\n/********** TELOS an to c einai Operator +,-,/,*,^ ******************************************************/            \r\n\r\n            infix.shift();   \r\n            this.setState({ \r\n                inf: infix,\r\n                car: carry,\r\n                post: postfix\r\n            });\r\n            setTimeout(this.processState, 2500);\r\n        }\r\n/********** TELOS an to INF>0 ******************************************************/ \r\n\r\n\r\n/********** An to INF=0 ******************************************************/ \r\n        else {\r\n            console.log('INF=0');\r\n            \r\n            if (carry.length > 0) {\r\n                console.log('CARRY NOT 0');\r\n                this.setState({ msg: 'Each element remained in Carry, now goes to Postfix.' });\r\n    \r\n                postfix.push(carry.pop());\r\n                setTimeout(2500);\r\n    \r\n                this.setState({ car: carry });\r\n                this.setState({ post: postfix });\r\n                setTimeout(this.processState, 2500);\r\n            \r\n            } else if (postfix.length > 0) {\r\n                console.log('POST>0, BUT INF=0 & CARRY=0');\r\n                this.setState({\r\n                    msg: 'The process completed successfully.',\r\n                    isPlaying: false\r\n                });\r\n                \r\n                setTimeout(10000);\r\n                //this.setState({tog: false});\r\n            \r\n            } else {\r\n                console.log('POST=0, BUT ALSO INF=0 & CARRY=0');\r\n                this.setState({msg: \"Please enter an infix expression first.\"});\r\n            }\r\n        }\r\n/********** TELOS an to INF=0 ******************************************************/\r\n\r\n\r\n    }\r\n}\r\n \r\nexport default Visualization;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);","export function arrEqual(a, b) {\r\n    if (a === b) return true;\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function arrDiff(a, b) {\r\n    if (a.length > b.length)\r\n        while (b.length < a.length)\r\n            b.push('');\r\n    if (a.length < b.length)\r\n        while (b.length > a.length)\r\n            a.push('');\r\n\r\n    let diff = [];\r\n    for (let i = 0; i < a.length; i++) {\r\n        let same = a[i] === b[i];\r\n        diff[i] = {prevValue: a[i], value: same ? a[i] : b[i], same, index: i}\r\n    }\r\n    return diff;\r\n}\r\n\r\nexport function objDiff(a,b) {\r\n    let diff = {};\r\n    let keys = Object.keys(a);\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let same = a[keys[i]] === b[keys[i]];\r\n        diff[keys[i]] = {prevValue: a[keys[i]], value: same ? a[keys[i]] : b[keys[i]], same, key: keys[i]}\r\n    }\r\n    return diff;\r\n}\r\n\r\n\r\nexport function isLetter(c) {\r\n    return (/[A-Za-z]/i.test(c));\r\n}\r\n\r\nexport function isNumber(c) {\r\n    return (/[0-9]/i.test(c));\r\n}\r\n\r\nexport function isOperator(c) {\r\n    return [\"+\",\"-\",\"*\",\"/\",\"^\"].includes(c);\r\n}\r\n\r\nexport function isOpeningParenthesis(c) {\r\n    return [\"(\"].includes(c);\r\n}\r\n\r\nexport function isClosingParenthesis(c) {\r\n    return [\")\"].includes(c);\r\n}\r\n\r\nexport function operPriority(c) {\r\n    switch (c) {            \r\n        default:\r\n            return -1;\r\n\r\n        case '+':\r\n        case '-':\r\n            return 1;\r\n\r\n        case '*':\r\n        case '/':\r\n            return 2;\r\n\r\n        case '^':\r\n            return 3;\r\n    }\r\n}\r\n\r\n/*\r\nexport function calculate(exp) {\r\n    let stack = [];\r\n            \r\n    for(let i=0; i < exp.length; i++) { \r\n        let c = exp.charAt(i); \r\n        \r\n        if (exp.length === 0){\r\n            break;\r\n        }\r\n        \r\n        else if (isLetter(exp)) {\r\n            stack.push(\"Characters can not be calculated.\");\r\n            break;\r\n        }\r\n \r\n        else if (isNumber(c)) {\r\n            stack.push(c - '0');         \r\n        } \r\n        \r\n        else { \r\n            let val1 = stack.pop(); \r\n            let val2 = stack.pop(); \r\n            \r\n            switch(c) { \r\n                case '+': \r\n                    stack.push(val2 + val1); \r\n                break; \r\n                \r\n                case '-': \r\n                    stack.push(val2 - val1); \r\n                break; \r\n                \r\n                case '/': \r\n                    stack.push(val2 / val1); \r\n                break; \r\n                \r\n                case '*': \r\n                    stack.push(val2 * val1); \r\n                break;\r\n\r\n                case '^': \r\n                    let count = val2;\r\n                    for (let i = 1; i < val1; i++) {\r\n                        count = count * val2;\r\n                    }\r\n                    stack.push(count); \r\n                break; \r\n            } \r\n        } \r\n    }\r\n    return stack.pop();\r\n}\r\n*/"],"sourceRoot":""}