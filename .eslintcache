[{"D:\\infixtopostfix2\\src\\App.jsx":"1","D:\\infixtopostfix2\\src\\functions.jsx":"2","D:\\infixtopostfix2\\src\\animationTrail.jsx":"3","D:\\infixtopostfix2\\src\\Visualization.jsx":"4","D:\\infixtopostfix2\\src\\textbox.jsx":"5","D:\\infixtopostfix2\\src\\index.js":"6","D:\\infixtopostfix2\\src\\stack.js":"7","D:\\infixtopostfix2\\src\\Column.jsx":"8","C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\index.js":"9","C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\functions.jsx":"10","C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\textbox.jsx":"11","C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\animationTrail.jsx":"12"},{"size":2908,"mtime":1645985994000,"results":"13","hashOfConfig":"14"},{"size":3057,"mtime":1612722310000,"results":"15","hashOfConfig":"14"},{"size":1052,"mtime":1612633780000,"results":"16","hashOfConfig":"14"},{"size":11118,"mtime":1645982788000,"results":"17","hashOfConfig":"14"},{"size":683,"mtime":1612204226000,"results":"18","hashOfConfig":"14"},{"size":205,"mtime":1612092022000,"results":"19","hashOfConfig":"14"},{"size":911,"mtime":1632852484000,"results":"20","hashOfConfig":"14"},{"size":967,"mtime":1612633674000,"results":"21","hashOfConfig":"14"},{"size":205,"mtime":1612095622000,"results":"22","hashOfConfig":"23"},{"size":3057,"mtime":1612722310000,"results":"24","hashOfConfig":"23"},{"size":683,"mtime":1612204226000,"results":"25","hashOfConfig":"23"},{"size":1052,"mtime":1612637380000,"results":"26","hashOfConfig":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"snwhbk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"122mpbw",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\infixtopostfix2\\src\\App.jsx",["58","59"],"import styles from './styles.css';\nimport React from 'react';\nimport Textbox from './textbox';\nimport infixToPostfix from './infixToPostfix';\nimport {isLetter} from './functions';\nimport Visualization from './Visualization';\n \nclass App extends React.Component {\n \n  constructor (props) {\n    super(props);\n    //this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      exp: '',\n      inf: [],\n      postfix: '',\n      result: '',\n      tog: false\n    };\n    console.log('APP CONSTRUCTOR', this.props);\n  }\n \n \n  handleChange(e) {\n    console.log('HANDLECHANGE', e.target.value);     \n    this.setState({exp: e.target.value});\n    e.preventDefault();\n  }\n \n  handleSubmit = (e) => {\n    console.log('HANDLESUBMIT', e.target.value);\n    if(!isLetter(this.state.exp)) {\n      this.setState({\n        postfix: infixToPostfix(this.state.exp),\n        result: eval(this.state.exp),\n        inf: Array.from(this.state.exp),\n        tog: true\n      });\n    } else {\n      this.setState({\n        postfix: infixToPostfix(this.state.exp),\n        result: \"Characters can not be calculated.\",\n        inf: Array.from(this.state.exp),\n        tog: true\n      });      \n    }\n    e.preventDefault();\n    this.render();\n  }\n \n  handleAutosubmit(e) {\n    console.log('HANDLEAUTOSUBMIT', e.target.value);\n    e.preventDefault();\n  }\n \n  clearAll() {\n    console.log('CLEARALL');\n    this.setState({\n      exp: '',\n      postfix: '',\n      result: '',\n      inf: [],\n      tog: false\n    });\n  }\n\n  render() {\n    console.log('APP RENDER');\n    return(\n      <div className=\"ui container\">\n        <div className=\"ui grid\">\n          <Textbox\n            value = {(this.state.exp)}\n            label = {\"Infix\"}\n            onChange = {e => this.handleChange(e)}\n            onSubmit = {e => this.handleSubmit(e)}\n          />\n          <div className=\"four wide column buttons\">\n            <button\n              className = \"ui positive button\"\n              onClick = {e => this.handleSubmit(e)}\n            >\n              Convert\n            </button>\n            <button\n              className = \"ui negative button\"\n              onClick = {e => this.clearAll(e)}\n            >\n              Clear\n            </button>\n          </div>\n          <Textbox\n            value = {this.state.postfix}\n            label = {\"Postfix\"}\n            onChange = {e => this.handleAutosubmit(e)}\n            onSubmit = {e => this.handleAutosubmit(e)}\n          />\n          <Textbox\n            value = {(this.state.result)}\n            label = {\"Result\"}\n            onChange = {e => this.handleAutosubmit(e)}\n            onSubmit = {e => this.handleAutosubmit(e)}\n          />\n        </div>\n        <Visualization\n          exp = {this.state.inf} \n          toggle = {this.state.tog}\n          onFinished = {() => {this.setState({tog:false})}} \n        />\n      </div>\n    );\n  }\n \n \n}\n \nexport default App;",["60","61"],"D:\\infixtopostfix2\\src\\functions.jsx",[],"D:\\infixtopostfix2\\src\\animationTrail.jsx",["62"],"import React from 'react';\r\nimport { useTrail, animated } from 'react-spring';\r\nimport { List } from \"semantic-ui-react\"\r\nimport animationTrail from './animationTrail.css';\r\n\r\nfunction AnimationTrail(props) {\r\n  const config = { mass: 5, tension: 2000, friction: 200 }\r\n  let items = props.items;\r\n  let toggle = props.tog;\r\n\r\n  const trail = useTrail(\r\n    () => items.length, {\r\n      config,\r\n      opacity: toggle ? 1 : 0,\r\n      y: toggle ? 0 : 20,\r\n      height: toggle ? 160 : 0,\r\n      from: { opacity: 0, y: 20, height: 0 },\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div className=\"trails-main\">\r\n      <div>\r\n          {trail.map(({ y, height, ...rest }, index) => (\r\n          <animated.div\r\n            key={items[index]}\r\n            className=\"trails-text\"\r\n            style={{ ...rest, transform: y.interpolate(y => `translate3d(0,${y}px,0)`) }}>\r\n            <List style={{ height }}>{items.map((v)=><List.Item>{v}</List.Item>)}</List>\r\n          </animated.div>\r\n        ))} \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default AnimationTrail;","D:\\infixtopostfix2\\src\\Visualization.jsx",["63","64","65","66","67","68","69","70"],"import React from 'react';\r\nimport {isLetter, isNumber, isOperator, isClosingParenthesis, isOpeningParenthesis, operPriority } from './functions';\r\nimport Column from './Column';\r\nimport {Button, Container, Divider, Grid, Header, Input, Message, Segment} from 'semantic-ui-react';\r\n\r\n//infix: (a+b/c*(d+e)-f)\r\n//postfix: abc/de+*+f-\r\n \r\nclass Visualization extends React.Component {\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            inf: this.props.exp,\r\n            car: [],\r\n            post: [],\r\n            msg: '',\r\n            tog: this.props.toggle,\r\n            isPlaying: false,\r\n            playerCancellationHandler: null\r\n        }\r\n        console.log('VISUALIZATIONNEW CONSTRUCTOR', this.props, this.state);\r\n    }\r\n\r\n    play = () => {        \r\n            let cancellationHandler = setTimeout(() => {\r\n                this.play();\r\n            }, this.state.speed);\r\n            this.setState({\r\n                playerCancellationHandler:cancellationHandler,\r\n                isPlaying: true\r\n            });\r\n    }\r\n\r\n    pause = () => {\r\n        clearTimeout(this.state.playerCancellationHandler);\r\n        this.setState({playerCancellationHandler: null, isPlaying: false});\r\n    }\r\n\r\n    togglePausePlay = () => {\r\n        if (this.state.isPlaying) {\r\n            this.pause();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    stop = () => {\r\n        if (this.state.playerCancellationHandler) {\r\n            clearTimeout(this.state.playerCancellationHandler);\r\n        }\r\n        this.setState({isPlaying: false, playerCancellationHandler: null});\r\n    }\r\n\r\n    clear() {\r\n        this.props.onFinished();\r\n        this.setState({\r\n            inf: [],\r\n            car: [],\r\n            post: [],\r\n            msg: '',\r\n            tog: false\r\n        });\r\n    }\r\n \r\n    render() {        \r\n        console.log('RENDER on', this.props, this.state);\r\n            const items =this.state.inf.map((item) => <li>{item}</li>);\r\n            return (\r\n                <div className=\"ui container\">\r\n                    <Column\r\n                        spec='Specifications: '\r\n                        infix={items}\r\n                        carry={this.state.car}\r\n                        postfix={this.state.post}\r\n                        message={this.state.msg}\r\n                        toggle={this.state.tog}\r\n                    />\r\n                </div>\r\n            );\r\n    }\r\n    /** Play-Pause and Stop-Reset buttons \r\n    <div className=\"ui grid\">\r\n        <div className=\"two wide column buttons\">   \r\n            <Button icon={this.state.isPlaying ? \"pause\" : \"play\"}\r\n                content={this.state.isPlaying ? \"Pause\" : \"Play\"}\r\n                color={\"blue\"}\r\n                onClick={() => this.togglePausePlay()}\r\n            />               \r\n            <Button icon={this.state.isPlaying ? \"stop\" : \"undo\"}\r\n                content={this.state.isPlaying ? \"Stop\" : \"Reset\"}\r\n                color={this.state.isPlaying ? \"red\" : \"orange\"}\r\n                onClick={() => this.stop()}\r\n            />\r\n        </div>\r\n    </div>*/\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.toggle !== this.state.tog) {\r\n            console.log('COMPONENTDIDUPDATE', this.props, this.state);\r\n            this.setState({\r\n                inf: this.props.exp, \r\n                tog: this.props.toggle\r\n            });\r\n            setTimeout(this.processState, 1); \r\n        }\r\n    }\r\n \r\n    processState = () => { \r\n        console.log('PROCESSSTATE', this.props, this.state);\r\n\r\n        let c = this.state.inf[0],\r\n            infix = [...this.state.inf],\r\n            carry = [...this.state.car],\r\n            postfix = [...this.state.post];\r\n\r\n\r\n/********** An to TOGGLE=0 ******************************************************/ \r\n        if (!this.props.toggle) {        \r\n            console.log('INF=0 & CLEAR ALL');\r\n            this.clear();\r\n            infix=[];\r\n            carry=[];\r\n            postfix=[];        \r\n        }\r\n/********** TELOS an to TOGGLE=0 ******************************************************/ \r\n\r\n\r\n        //-----Gia kathe stoixeio tou infix\r\n        if (this.state.inf.length > 0) {\r\n            console.log('INF>0');\r\n            this.setState({isPlaying: true});\r\n\r\n/********** An to c einai gramma h arithmos *********************************************************/\r\n            if (isLetter(c) || isNumber(c)) {\r\n                console.log('C=LETTER/NUMBER');\r\n                this.setState({msg: 'The \"' + c + '\" is letter/number and goes to Postfix.' });\r\n\r\n                postfix.push(c);\r\n                setTimeout(2500);\r\n            }\r\n/********** TELOS An to c einai gramma h arithmos *********************************************************/\r\n\r\n\r\n/********** An to c einai anoixti parenthesi ( ******************************************************/\r\n            else if (isOpeningParenthesis(c)) {\r\n                console.log('C=(');\r\n                this.setState({msg: 'The character is opening parenthesis \"' + c + '\", so we push it directly to Carry.' });\r\n\r\n                carry.push(c);\r\n                setTimeout(2500);\r\n            }\r\n/********** TELOS An to c einai anoixti parenthesi ( ************************************************/\r\n\r\n\r\n/********** An to c einai kleisti parenthesi ) ******************************************************/\r\n            else if (isClosingParenthesis(c)) {\r\n                console.log(\"C=)\");\r\n\r\n                if (!carry.length>0) {\r\n                    console.log('INVALID: OPEN PARENTHESIS ( NOT FOUND AND CARRY=0');\r\n                    this.setState({msg: 'Invalid expression: Found a closing parenthesis, but not an opening one. Operation failed.' });  \r\n                    \r\n                    setTimeout(5000);\r\n                    this.setState({tog: false});\r\n                \r\n                } else {\r\n                    while (carry.length>0 && !isOpeningParenthesis(carry[carry.length-1])) {\r\n                        console.log('WHILE NOT (, CARRY POP -> POSTFIX');\r\n                        this.setState({msg: 'The closing parenthesis \"' + c + '\" pops first and all the other elements in Carry are pushed directly to Postfix, one by one.' });\r\n                        \r\n                        postfix.push(carry.pop());\r\n                        setTimeout(2500);\r\n\r\n                        this.setState({ car: carry });\r\n                        this.setState({ post: postfix });\r\n                        setTimeout(2500);\r\n                    }\r\n                    \r\n                    if (!carry.length>0 || !isOpeningParenthesis(carry[carry.length-1])){                            \r\n                        console.log('INVALID: OPENING PARENTHESIS ( NOT FOUND OR CARRY=0');\r\n                        this.setState({msg: 'Invalid expression: Found a closing parenthesis, but not an opening one. Operation failed.' });  \r\n                        \r\n                        setTimeout(5000);\r\n                        this.setState({tog: false});\r\n\r\n                    } else {\r\n                        console.log('CARRY PEEK = (');\r\n                        this.setState({msg: 'Carry pops the opening parenthesis \"' + c + '\", since we do not need it anymore.' });  \r\n                        \r\n                        carry.pop();\r\n                        setTimeout(2500);\r\n                    }\r\n                }\r\n            }\r\n/********** TELOS An to c einai kleisti parenthesi ) ************************************************/\r\n\r\n\r\n/********** An to c einai Operator +,-,/,*,^ ******************************************************/           \r\n            else if (isOperator(c)) {\r\n                console.log('C=OPERATOR');\r\n\r\n                while (carry.length>0 && operPriority(c) <= operPriority(carry[carry.length - 1])) {\r\n                    console.log('WHILE PRIORITY C <= CARRY & CARRY NOT EMPTY, CARRY POP -> POSTFIX');\r\n                    this.setState({msg: 'Compare the \"' + c + '\" with the \"' + carry[carry.length - 1] + '\" and the one with the higher priority goes to Postfix.' });\r\n\r\n                    postfix.push(carry.pop());\r\n                    setTimeout(2500);\r\n\r\n                    this.setState({ car: carry });\r\n                    this.setState({ post: postfix });\r\n                    setTimeout(2500);\r\n                }\r\n\r\n                if (!carry.length>0) {\r\n                    console.log('CARRY=0, SO C -> CARRY');\r\n                    this.setState({msg: 'The Carry is empty, so the \"' + c + '\" goes directly to Carry.' });\r\n                    \r\n                } else if (operPriority(c) <= operPriority(carry[carry.length - 1])) {\r\n                    console.log('PRIORITY C > CARRY, SO C -> CARRY');\r\n                    this.setState({msg: 'The \"' + c + '\" has higher priority than the \"' + carry[carry.length - 1] + '\" but still goes to Carry.' });\r\n                \r\n                } else if (isOpeningParenthesis(carry[carry.length-1])) {\r\n                    console.log('CARRY.PEEK = (, SO C GOES TO CARRY');\r\n                    this.setState({ msg: 'The last element of Carry is \"(\", so \"' + c + '\" also goes to Carry.' });\r\n                }\r\n\r\n                carry.push(c);\r\n                setTimeout(2500);\r\n            }\r\n/********** TELOS an to c einai Operator +,-,/,*,^ ******************************************************/            \r\n\r\n            infix.shift();   \r\n            this.setState({ \r\n                inf: infix,\r\n                car: carry,\r\n                post: postfix\r\n            });\r\n            setTimeout(this.processState, 2500);\r\n        }\r\n/********** TELOS an to INF>0 ******************************************************/ \r\n\r\n\r\n/********** An to INF=0 ******************************************************/ \r\n        else {\r\n            console.log('INF=0');\r\n            \r\n            if (carry.length > 0) {\r\n                console.log('CARRY NOT 0');\r\n                this.setState({ msg: 'Each element remained in Carry, now goes to Postfix.' });\r\n    \r\n                postfix.push(carry.pop());\r\n                setTimeout(2500);\r\n    \r\n                this.setState({ car: carry });\r\n                this.setState({ post: postfix });\r\n                setTimeout(this.processState, 2500);\r\n            \r\n            } else if (postfix.length > 0) {\r\n                console.log('POST>0, BUT INF=0 & CARRY=0');\r\n                this.setState({\r\n                    msg: 'The process completed successfully.',\r\n                    isPlaying: false\r\n                });\r\n                \r\n                setTimeout(10000);\r\n                //this.setState({tog: false});\r\n            \r\n            } else {\r\n                console.log('POST=0, BUT ALSO INF=0 & CARRY=0');\r\n                this.setState({msg: \"Please enter an infix expression first.\"});\r\n            }\r\n        }\r\n/********** TELOS an to INF=0 ******************************************************/\r\n\r\n\r\n    }\r\n}\r\n \r\nexport default Visualization;","D:\\infixtopostfix2\\src\\textbox.jsx",[],"D:\\infixtopostfix2\\src\\index.js",[],["71","72"],"D:\\infixtopostfix2\\src\\stack.js",[],["73","74"],"D:\\infixtopostfix2\\src\\Column.jsx",[],"C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\index.js",[],"C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\functions.jsx",[],"C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\textbox.jsx",[],["75","76"],"C:\\Users\\Chrysa\\Desktop\\inf\\infixtopostfix2\\src\\animationTrail.jsx",["77"],{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":35,"column":17,"nodeType":"84","messageId":"85","endLine":35,"endColumn":21},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"78","severity":1,"message":"90","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":22},{"ruleId":"78","severity":1,"message":"91","line":4,"column":9,"nodeType":"80","messageId":"81","endLine":4,"endColumn":15},{"ruleId":"78","severity":1,"message":"92","line":4,"column":17,"nodeType":"80","messageId":"81","endLine":4,"endColumn":26},{"ruleId":"78","severity":1,"message":"93","line":4,"column":28,"nodeType":"80","messageId":"81","endLine":4,"endColumn":35},{"ruleId":"78","severity":1,"message":"94","line":4,"column":37,"nodeType":"80","messageId":"81","endLine":4,"endColumn":41},{"ruleId":"78","severity":1,"message":"95","line":4,"column":43,"nodeType":"80","messageId":"81","endLine":4,"endColumn":49},{"ruleId":"78","severity":1,"message":"96","line":4,"column":51,"nodeType":"80","messageId":"81","endLine":4,"endColumn":56},{"ruleId":"78","severity":1,"message":"97","line":4,"column":58,"nodeType":"80","messageId":"81","endLine":4,"endColumn":65},{"ruleId":"78","severity":1,"message":"98","line":4,"column":67,"nodeType":"80","messageId":"81","endLine":4,"endColumn":74},{"ruleId":"86","replacedBy":"99"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"86","replacedBy":"101"},{"ruleId":"88","replacedBy":"102"},{"ruleId":"86","replacedBy":"103"},{"ruleId":"88","replacedBy":"104"},{"ruleId":"78","severity":1,"message":"90","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":22},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'animationTrail' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Input' is defined but never used.","'Message' is defined but never used.","'Segment' is defined but never used.",["105"],["106"],["105"],["106"],["105"],["106"],"no-global-assign","no-unsafe-negation"]